/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pj_arbre;

import java.sql.SQLException;
import java.util.LinkedHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dirila
 */
public class V_MesArbres extends javax.swing.JDialog {

    /**
     * Creates new form V_MesArbres
     */
    private C_Arbre leControl;
    private LinkedHashMap <Integer, M_Acceder> lhmLesAccesUtilisateur;
    private LinkedHashMap<String, M_Acces_Arbre> lhmLesAcces;
    private LinkedHashMap <Integer, M_Arbre> lhmLesArbres;
    
    private DefaultTableModel dtm_tb_arbres;
    private Object[] objTableauCles;
    private int iLigne;
    private int iCle;
    
    public V_MesArbres(java.awt.Frame parent, boolean modal, C_Arbre leControl) {           
        super(parent, modal);
        this.leControl = leControl;
        initComponents();
    }
    
    public void afficher(LinkedHashMap<Integer, M_Acceder> lhmLesAccesUtilisateur,
            LinkedHashMap<String, M_Acces_Arbre> lhmLesAcces,
            LinkedHashMap<Integer, M_Arbre> lhmLesArbres) {
        this.lhmLesAccesUtilisateur = lhmLesAccesUtilisateur;
        this.lhmLesAcces = lhmLesAcces;
        this.lhmLesArbres = lhmLesArbres;

        dtm_tb_arbres = (DefaultTableModel) tb_arbres.getModel();
        dtm_tb_arbres.setRowCount(0);

        for (M_Acceder unAcces : this.lhmLesAccesUtilisateur.values()) {
            int iIdArbre = unAcces.getIdArbre();
            String strCodeAcces = unAcces.getCodeAcces();
            M_Arbre unArbre = lhmLesArbres.get(iIdArbre);
            M_Acces_Arbre unAccesArbre = lhmLesAcces.get(strCodeAcces);

            if (unArbre != null) {
                dtm_tb_arbres.addRow(new Object[]{unArbre.getNom(), unAccesArbre.getLibelle()});
            }
        }
        this.setSize(500, 340);
        this.setLocationRelativeTo(null); // déplacer ici
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sc_util = new javax.swing.JScrollPane();
        tb_arbres = new javax.swing.JTable();
        pn_cms = new javax.swing.JPanel();
        bt_creer = new javax.swing.JButton();
        bt_supprimer = new javax.swing.JButton();
        bt_ouvrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mes arbres");
        setResizable(false);
        getContentPane().setLayout(null);

        tb_arbres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Arbre", "Accès"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_arbres.getTableHeader().setReorderingAllowed(false);
        tb_arbres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_arbresMouseClicked(evt);
            }
        });
        sc_util.setViewportView(tb_arbres);
        if (tb_arbres.getColumnModel().getColumnCount() > 0) {
            tb_arbres.getColumnModel().getColumn(0).setResizable(false);
            tb_arbres.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(sc_util);
        sc_util.setBounds(20, 20, 302, 256);

        bt_creer.setText("Créer");
        bt_creer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_creerActionPerformed(evt);
            }
        });

        bt_supprimer.setText("Supprimer");
        bt_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_supprimerActionPerformed(evt);
            }
        });

        bt_ouvrir.setText("Ouvrir");
        bt_ouvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ouvrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_cmsLayout = new javax.swing.GroupLayout(pn_cms);
        pn_cms.setLayout(pn_cmsLayout);
        pn_cmsLayout.setHorizontalGroup(
            pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_cmsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_ouvrir, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(bt_creer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pn_cmsLayout.setVerticalGroup(
            pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_cmsLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(bt_creer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_ouvrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_supprimer)
                .addContainerGap())
        );

        getContentPane().add(pn_cms);
        pn_cms.setBounds(330, 80, 150, 130);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_supprimerActionPerformed
        if (iLigne != -1) {
            M_Acceder unAcces = lhmLesAccesUtilisateur.get(iCle);
            
            if (unAcces != null) {
                M_Acces_Arbre accesArbre = lhmLesAcces.get(unAcces.getCodeAcces());
                
                if (accesArbre != null && "C".equals(accesArbre.getCodeAcces())) {
                    int reponse = JOptionPane.showConfirmDialog(this,
                        "Êtes-vous sûr de vouloir supprimer cet arbre ?", "Suppression",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

                    if (reponse == JOptionPane.YES_OPTION) {
                        try {
                            leControl.delete_Arbre(iCle);
                            JOptionPane.showMessageDialog(null, "L'arbre a bien été supprimé.",
                                    "Mise à jour", JOptionPane.INFORMATION_MESSAGE);
                        } catch (SQLException ex) {
                            Logger.getLogger(V_MesArbres.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(null, "Erreur lors de la suppression.",
                                    "Erreur", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Vous n'êtes pas"
                            + " le créateur de l'arbre.",
                            "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un arbre.",
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bt_supprimerActionPerformed

    private void bt_creerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_creerActionPerformed
        leControl.aff_V_Creer_Arbre();
    }//GEN-LAST:event_bt_creerActionPerformed

    private void tb_arbresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_arbresMouseClicked
        iLigne = tb_arbres.getSelectedRow();
        if (iLigne != -1) {
            Object[] cles = lhmLesAccesUtilisateur.keySet().toArray();
            iCle = (int) cles[iLigne];
        }
    }//GEN-LAST:event_tb_arbresMouseClicked

    private void bt_ouvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ouvrirActionPerformed
        if (iLigne == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un arbre.",
                    "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        M_Acceder unAcces = lhmLesAccesUtilisateur.get(iCle);
        if (unAcces == null) {
            JOptionPane.showMessageDialog(this, "Accès non trouvé.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        M_Arbre arbre = lhmLesArbres.get(unAcces.getIdArbre());
        String strCodeAcces = unAcces.getCodeAcces();
        if (arbre != null) {
            this.dispose();
            try {
                leControl.aff_V_Arbre(arbre, strCodeAcces);
            } catch (SQLException ex) {
                Logger.getLogger(V_MesArbres.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Arbre introuvable.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bt_ouvrirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_MesArbres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_MesArbres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_MesArbres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_MesArbres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                V_MesArbres dialog = new V_MesArbres(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_creer;
    private javax.swing.JButton bt_ouvrir;
    private javax.swing.JButton bt_supprimer;
    private javax.swing.JPanel pn_cms;
    private javax.swing.JScrollPane sc_util;
    private javax.swing.JTable tb_arbres;
    // End of variables declaration//GEN-END:variables
}
