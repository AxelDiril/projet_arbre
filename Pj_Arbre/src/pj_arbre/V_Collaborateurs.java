/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pj_arbre;

import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.LinkedHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author axel
 */
public class V_Collaborateurs extends javax.swing.JFrame {

    /**
     * Creates new form V_Utilisateurs
     */
    private C_Arbre leControl;
    private LinkedHashMap <Integer, M_Utilisateur> lhmLesUtilisateurs;
    private LinkedHashMap <String, M_Acces_Arbre> lhmLesAcces;
    private LinkedHashMap <Integer, M_Acceder> lhmLesAccesArbre;
    private DefaultTableModel dtm_tb_util;
    private Object[] objTableauClesUtilisateur;
    private Object[] objTableauClesAcces;
    private int iLigne;
    private int iCle;
    private boolean bIsModif;
    private M_Arbre unArbre;
    private String strCodeAcces;
    private M_Utilisateur unUtilisateurConnecte;
    
    public V_Collaborateurs(java.awt.Frame parent, boolean modal, C_Arbre leControl) {
        this.leControl = leControl;
        initComponents();
    }
    
    public void afficher(LinkedHashMap <Integer, M_Utilisateur> lhmLesUtilisateurs,
            LinkedHashMap <String, M_Acces_Arbre> lhmLesAcces,
            LinkedHashMap <Integer, M_Acceder> lhmLesAccesArbre,
            M_Arbre unArbre, String strCodeAcces, M_Utilisateur unUtilisateurConnecte){
        this.lhmLesUtilisateurs = lhmLesUtilisateurs;
        this.lhmLesAcces = lhmLesAcces;
        this.lhmLesAccesArbre = lhmLesAccesArbre;
        this.unArbre = unArbre;
        this.strCodeAcces = strCodeAcces;
        this.unUtilisateurConnecte = unUtilisateurConnecte;
        
        // Réserver les fonctionnalités au créateur de l'arbre
        
        if(strCodeAcces.equals("C") == false){
            bt_modifier.setEnabled(false);
            bt_supprimer.setEnabled(false);
        }
        
        this.modeEdit(false);
        
        aff_cms();
        
        dtm_tb_util = new DefaultTableModel();
        dtm_tb_util = (DefaultTableModel) tb_util.getModel();
        dtm_tb_util.setRowCount(0);
        
        objTableauClesUtilisateur = lhmLesUtilisateurs.keySet().toArray();
        objTableauClesAcces = lhmLesAcces.keySet().toArray();
        
        // Remplir le tableau d'utilisateurs
        
        for (M_Acceder unAccesArbre : lhmLesAccesArbre.values()) {
            M_Utilisateur unUtilisateur = lhmLesUtilisateurs.get(unAccesArbre.getIdUtilisateur());
            M_Acces_Arbre unAcces = lhmLesAcces.get(unAccesArbre.getCodeAcces());
            
            dtm_tb_util.addRow(new Object[]{
                unUtilisateur.getLogin(),
                unAcces.getLibelle()
            });
        }
        
        // Remplir la ComboBox utilisateurs
        
        co_utilisateur.removeAllItems();
        
        iLigne = 0;
        
        for(M_Utilisateur unUtilisateur : lhmLesUtilisateurs.values()){
            co_utilisateur.addItem(unUtilisateur.getLogin());
            iLigne++;
        }
        
        // Remplir la ComboBox rôles
        
        co_acces.removeAllItems();

        iLigne = 0;

        for(String unCodeAcces : lhmLesAcces.keySet()){
            M_Acces_Arbre unAcces = lhmLesAcces.get(unCodeAcces);
            
            co_acces.addItem(unAcces.getLibelle());
            iLigne++;
        }
        
        // Séléction par défaut
        
        tb_util.setRowSelectionInterval(0, 0);
        
        this.setLocationRelativeTo(null);
        this.setSize(500, 450);
        this.setVisible(true);
    }
    
    public void aff_am(){
        this.modeEdit(true);
        
        // Afficher les bons panels
        
        pn_am.setVisible(true);
        pn_cms.setVisible(false);
        
    }
    
    public void aff_cms(){
        // Afficher les bons panels
        
        pn_am.setVisible(false);
        pn_cms.setVisible(true);
    }
    
    public void modeEdit(Boolean active){
        co_acces.setEnabled(active);
        co_utilisateur.setEnabled(active);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sc_util = new javax.swing.JScrollPane();
        tb_util = new javax.swing.JTable();
        lb_acces = new javax.swing.JLabel();
        co_acces = new javax.swing.JComboBox<>();
        pn_am = new javax.swing.JPanel();
        bt_enregistrer = new javax.swing.JButton();
        bt_annuler = new javax.swing.JButton();
        pn_cms = new javax.swing.JPanel();
        bt_supprimer = new javax.swing.JButton();
        bt_modifier = new javax.swing.JButton();
        lb_utilisateur = new javax.swing.JLabel();
        co_utilisateur = new javax.swing.JComboBox<>();
        bt_retour = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion des collaborateurs");
        setResizable(false);

        tb_util.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Login", "Accès"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_util.getTableHeader().setReorderingAllowed(false);
        tb_util.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_utilMouseClicked(evt);
            }
        });
        sc_util.setViewportView(tb_util);

        lb_acces.setText("Accès :");

        co_acces.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sélectionnez un accès" }));
        co_acces.setEnabled(false);

        bt_enregistrer.setText("Enregistrer");
        bt_enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_enregistrerActionPerformed(evt);
            }
        });

        bt_annuler.setText("Annuler");
        bt_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_annulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_amLayout = new javax.swing.GroupLayout(pn_am);
        pn_am.setLayout(pn_amLayout);
        pn_amLayout.setHorizontalGroup(
            pn_amLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_amLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_annuler, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
        );
        pn_amLayout.setVerticalGroup(
            pn_amLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_amLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_amLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_enregistrer)
                    .addComponent(bt_annuler))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bt_supprimer.setText("Supprimer");
        bt_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_supprimerActionPerformed(evt);
            }
        });

        bt_modifier.setText("Ajouter / Modifier");
        bt_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_cmsLayout = new javax.swing.GroupLayout(pn_cms);
        pn_cms.setLayout(pn_cmsLayout);
        pn_cmsLayout.setHorizontalGroup(
            pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_cmsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_modifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_cmsLayout.setVerticalGroup(
            pn_cmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_cmsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_modifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_supprimer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lb_utilisateur.setText("Utilisateur :");
        lb_utilisateur.setToolTipText("");

        co_utilisateur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sélectionnez un utilisateur" }));
        co_utilisateur.setEnabled(false);

        bt_retour.setText("<< Retourner sur l'arbre");
        bt_retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_retourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sc_util, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_cms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_utilisateur)
                            .addComponent(lb_acces, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(co_utilisateur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(co_acces, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(bt_retour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pn_am, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(sc_util, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(pn_cms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_utilisateur)
                    .addComponent(co_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_acces)
                    .addComponent(co_acces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_am, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_retour)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_utilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_utilMouseClicked
        if(pn_cms.isVisible() && (tb_util.getSelectedRow()!=-1)){
            iLigne = tb_util.getSelectedRow();
            String strLogin = (String) dtm_tb_util.getValueAt(iLigne, 0);

            // Remplir les champs

            M_Utilisateur unUtilisateurSelectionne = null;
            for (M_Utilisateur unUtilisateur : lhmLesUtilisateurs.values()) {
                if (unUtilisateur.getLogin().equals(strLogin)) {
                    unUtilisateurSelectionne = unUtilisateur;
                    break;
                }
            }

            co_utilisateur.setSelectedItem(unUtilisateurSelectionne.getLogin());
            
            M_Acceder unAccesArbre = lhmLesAccesArbre.get(unUtilisateurSelectionne.getIdUtilisateur());
            M_Acces_Arbre unAcces = lhmLesAcces.get(unAccesArbre.getCodeAcces());
            
            co_acces.setSelectedItem(unAcces.getLibelle());
        }
    }//GEN-LAST:event_tb_utilMouseClicked

    private void bt_enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_enregistrerActionPerformed
    
        String strCodeAcces = (String) objTableauClesAcces[co_acces.getSelectedIndex()];
        int iIdUtilisateur = (int) objTableauClesUtilisateur[co_utilisateur.getSelectedIndex()];
        
        if(iIdUtilisateur == unUtilisateurConnecte.getIdUtilisateur()){
            JOptionPane.showMessageDialog(this, "Vous ne pouvez pas changer votre propre accès.",
                    "Erreur",
                    JOptionPane.ERROR_MESSAGE);
        }
        else if(strCodeAcces.equals("C")){
            JOptionPane.showMessageDialog(this, "Vous ne pouvez pas appliquer cet"
                    + " accès à un autre utilisateur.",
            "Erreur",
            JOptionPane.ERROR_MESSAGE);
        }
        else{
            try {
                leControl.enregistrerAccesArbre(iIdUtilisateur, unArbre, strCodeAcces);
                JOptionPane.showMessageDialog(null, "L'accès de cet utilisateur a bien été modifié.",
                        "Mise à jour", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(V_Collaborateurs.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bt_enregistrerActionPerformed

    private void bt_annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_annulerActionPerformed
        aff_cms();
        modeEdit(false);
    }//GEN-LAST:event_bt_annulerActionPerformed

    private void bt_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_supprimerActionPerformed
        int iIdUtilisateur = (int) objTableauClesUtilisateur[co_utilisateur.getSelectedIndex()];
        
        if(iIdUtilisateur == unUtilisateurConnecte.getIdUtilisateur()){
            JOptionPane.showMessageDialog(this, "Vous ne pouvez pas supprimer votre propre accès.",
                    "Erreur",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            int iReponse = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de"
                    + " vouloir retirer cet utilisateur ?",
                    "Suppression", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if(iReponse == JOptionPane.YES_OPTION){
                try {
                    JOptionPane.showMessageDialog(null, "L'accès de cet utilisateur a"
                            + " bien été supprimé.",
                        "Mise à jour", JOptionPane.INFORMATION_MESSAGE);
                    leControl.delete_AccesArbre(iIdUtilisateur, unArbre);
                } catch (SQLException ex) {
                    Logger.getLogger(V_Collaborateurs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_bt_supprimerActionPerformed

    private void bt_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modifierActionPerformed
        aff_am();

        bIsModif = true;

        modeEdit(true);
    }//GEN-LAST:event_bt_modifierActionPerformed

    private void bt_retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_retourActionPerformed
        try {
            this.dispose();
            leControl.aff_V_Arbre(unArbre, strCodeAcces);
        } catch (SQLException ex) {
            Logger.getLogger(V_Individus.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_retourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(V_Collaborateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(V_Collaborateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(V_Collaborateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(V_Collaborateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                V_Collaborateurs dialog = new V_Collaborateurs(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_annuler;
    private javax.swing.JButton bt_enregistrer;
    private javax.swing.JButton bt_modifier;
    private javax.swing.JButton bt_retour;
    private javax.swing.JButton bt_supprimer;
    private javax.swing.JComboBox<String> co_acces;
    private javax.swing.JComboBox<String> co_utilisateur;
    private javax.swing.JLabel lb_acces;
    private javax.swing.JLabel lb_utilisateur;
    private javax.swing.JPanel pn_am;
    private javax.swing.JPanel pn_cms;
    private javax.swing.JScrollPane sc_util;
    private javax.swing.JTable tb_util;
    // End of variables declaration//GEN-END:variables
}
